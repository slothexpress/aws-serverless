service: todo-app
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs20.x
  region: eu-north-1
  stage: dev
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:DeleteItem
            - dynamodb:Query
          Resource: "arn:aws:dynamodb:eu-north-1:*:table/todos"
  httpApi:
    authorizers:
      customAuthorizer:
        type: request
        functionName: authorizerFunc

functions:
  authorizerFunc:
    handler: functions/auth/authorizer.handler

  listTodos:
    handler: functions/todo/list.handler
    name: list-all-todos-${sls:stage}
    description: Returns all TODOS
    events:
      - httpApi:
          path: /todos
          method: get

  getTodo:
    handler: functions/todo/get.handler
    name: get-todo-${sls:stage}
    description: Returns a single TODO
    events:
      - httpApi:
          path: /todo/{id}
          method: get

  createTodo:
    handler: functions/todo/create.handler
    name: create-todo-${sls:stage}
    description: Creates a new TODO
    events:
      - httpApi:
          path: /todo
          method: post

  deleteTodo:
    handler: functions/todo/delete.handler
    name: delete-todo-${sls:stage}
    description: Deletes an existing TODO
    events:
      - httpApi:
          path: /todo/{id}
          method: delete
          authorizer:
            type: aws_iam

resources:
  Resources:
    todosTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: todos
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
          - AttributeName: sk
            AttributeType: S
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
          - AttributeName: sk
            KeyType: RANGE
        BillingMode: "PAY_PER_REQUEST"
